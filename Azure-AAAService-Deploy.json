{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    "containerSasToken": { "type": "securestring" },
    "resourceprefix": {
      "type": "string",
      "maxLength": 3,
      "metadata": {
        "description": "Resource prefix. Must be 3 characters."
      }
      },
      "resourceGroupLocation": {
        "type": "string",
      "defaultValue": "UK South",
      "allowedValues": [
        "UK South","UK West","West Europe","East US","West US","South Central US","North Europe","East Asia","Japan East","West Europe","Southeast Asia","Japan West","North Central US","Central US","Brazil South","East US 2","Australia Southeast","Australia East"
      ],
      "metadata": {
        "description": "Location for all resources."
      }
      },
      "vnetAddressPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.0/16",
        "metadata": {
          "description": "CIDR to be used for the Virtual Network. Must be a valid /24 CIDR"
        }
      },
      "gatewayHostSubnet": {
        "type": "string",
        "defaultValue": "10.0.0.0/24",
        "metadata": {
          "description": "CIDR to be used for gateway connectivity. Must be a valid /24 CIDR within the virtual network"
        }
      },
      "privateHostSubnet": {
        "type": "string",
        "defaultValue": "10.0.1.0/24",
        "metadata": {
        "description": "CIDR to be used for private network devices. Must be a valid /24 CIDR within the virtual network"
      }
    },
      "publicHostSubnet": {
        "type": "string",
        "defaultValue": "10.0.2.0/24",
        "metadata": {
        "description": "CIDR to be used for public network devices. Must be a valid /24 CIDR within the virtual network"
      }
   },
      "bastionHostSubnet": {
        "type": "string",
        "defaultValue": "10.0.3.0/27",
        "metadata": {
        "description": "CIDR to be used for bastion host. Must be a valid /27 CIDR within the virtual network"
      }
    },
    "AscOwnerEmail": {
      "type": "string",
      "metadata": {
        "description": "Email of the administrator who should be notified about Azure Security Center alert"
      }
    },
    "AscOwnerContact": {
      "type": "string",
      "metadata": {
          "description": "Phone number of the administrator should be notified about Azure Security Center alert"
      }
    },
    "ActionGroupEmailName":{
      "type": "string",
      "defaultValue": "IT Support Email",
      "metadata": {
        "description": "Display name for action group email address"
      }
    },
    "ActionGroupEmail":{
      "type": "string",
      "metadata": {
        "description": "Email address to add to be added to the monitoring action group for alerts"
      }
    },
    "ActionGroupSmsName":{
      "type": "string",
      "defaultValue": "IT Support SMS",
      "metadata": {
        "description": "Display name for action group SMS"
      }
    },
    "ActionGroupSmsCountryCode":{
      "type": "string",
      "defaultValue": "44",
      "metadata": {
        "description": "SMS country code for telephone number"
      }
    },
    "ActionGroupSmsNumber":{
      "type": "string",
      "metadata": {
        "description": "Phone number to add to be added to the monitoring action group for alerts"
      }
    },
    "Tags":{
      "type": "object",
      "defaultValue": {
        "CreatedDate": "[utcNow('yyyy-MM-dd')]",
        "CreatedBy": "AAA Service"
      }
    }
  },
    "variables":{
    "TemplateBaseUrl": "https://sctdeploymenttemplates.blob.core.windows.net/aaa/",
    "ActivityLogTemplateUrl": "[uri(variables('templateBaseUrl'), 'Azure-ActivityLog-Template.json')]",
    "NetworkWatcherTemplateUrl": "[uri(variables('templateBaseUrl'), 'Azure-NetworkWatcher-Template.json')]", 
    "NetworkTemplateUrl": "[uri(variables('templateBaseUrl'), 'Azure-Network-Template.json')]",
    "BackupTemplateUrl": "[uri(variables('templateBaseUrl'), 'Azure-Backup-Template.json')]",
    "AutomationTemplateUrl": "[uri(variables('templateBaseUrl'), 'Azure-Automation-Template.json')]",
    "SecurityCenterTemplateUrl": "[uri(variables('templateBaseUrl'), 'Azure-SecurityCenter-Template.json')]",
    "MonitoringTemplateUrl": "[uri(variables('templateBaseUrl'), 'Azure-Monitoring-Template.json')]",
    "PoliciesTemplateUrl": "[uri(variables('templateBaseUrl'), 'Azure-Policies-Template.json')]",
    "ActivityLogResourceGroupName": "[concat(parameters('resourceprefix'), '-RG01-ActivityLog')]",
    "NetworkWatcherResourceGroupName": "[concat(parameters('resourceprefix'), '-RG03-NetworkWatcher')]",
    "vNetResourceGroupName": "[concat(parameters('resourceprefix'), '-RG02-vNet')]",
    "BackupResourceGroupName": "[concat(parameters('resourceprefix'), '-RG04-Backup')]",
    "AutomationResourceGroupName": "[concat(parameters('resourceprefix'), '-RG05-Automation')]",
    "activityDiagLogName": "SubscriptionActivityLog"
    },
    "resources": [
      {
        "type": "Microsoft.Resources/resourceGroups",
        "apiVersion": "2020-06-01",
        "name": "[variables('ActivityLogResourceGroupName')]",
        "location": "[parameters('resourceGroupLocation')]",
        "tags": "[parameters('Tags')]",
        "properties": {}
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "name": "AzureActivityLogTemplate",
        "resourceGroup": "[variables('ActivityLogResourceGroupName')]",
        "dependsOn": [
          "[variables('ActivityLogResourceGroupName')]"
        ],
        "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('ActivityLogTemplateUrl'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceprefix" :{"value": "[parameters('resourceprefix')]"},
          "Tags" :{"value": "[parameters('Tags')]"}
        }
        }
      },
      {
        "apiVersion": "2017-05-01-preview",
        "type": "Microsoft.Insights/diagnosticSettings",
        "name": "[variables('activityDiagLogName')]",
        "dependsOn": [
            "AzureActivityLogTemplate"
        ],
        "properties": {
            "workspaceId": "[reference('AzureActivityLogTemplate').outputs.ActivityLogWorkspaceIDOutput.Value]",
            "mode": "Incremental",
            "logs": [
                {
                    "category": "Administrative",
                    "enabled": true
                },
                {
                    "category": "Security",
                    "enabled": true
                },
                {
                    "category": "ServiceHealth",
                    "enabled": true
                },
                {
                    "category": "Alert",
                    "enabled": true
                },
                {
                    "category": "Recommendation",
                    "enabled": true
                },
                {
                    "category": "Policy",
                    "enabled": true
                },
                {
                    "category": "Autoscale",
                    "enabled": true
                },
                {
                    "category": "ResourceHealth",
                    "enabled": true
                }
            ]
            }
       },
       {
        "type": "Microsoft.Resources/resourceGroups",
        "apiVersion": "2020-06-01",
        "name": "[variables('NetworkWatcherResourceGroupName')]",
        "location": "[parameters('resourceGroupLocation')]",
        "tags": "[parameters('Tags')]",
        "properties": {}
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "name": "AzureNetworkWatcherTemplate",
        "resourceGroup": "[variables('NetworkWatcherResourceGroupName')]",
          "dependsOn": [
            "[variables('NetworkWatcherResourceGroupName')]"
          ],
        "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('NetworkWatcherTemplateUrl'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceprefix" :{"value": "[parameters('resourceprefix')]"},
          "Tags" :{"value": "[parameters('Tags')]"}
        }
        }
      },
      {
        "type": "Microsoft.Resources/resourceGroups",
        "apiVersion": "2020-06-01",
        "name": "[variables('vNetResourceGroupName')]",
        "location": "[parameters('resourceGroupLocation')]",
        "tags": "[parameters('Tags')]",
        "properties": {}
      },
      {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AzureNetworkTemplate",
      "resourceGroup": "[variables('vNetResourceGroupName')]",
        "dependsOn": [
          "[variables('vNetResourceGroupName')]",
          "AzureNetworkWatcherTemplate"
        ],
      "properties": {
      "mode": "Incremental",
      "templateLink": {
        "uri": "[concat(variables('NetworkTemplateUrl'), parameters('containerSasToken'))]",
        "contentVersion": "1.0.0.0"
      },
      "parameters": {
        "resourceprefix" :{"value": "[parameters('resourceprefix')]"},
        "vnetAddressPrefix" :{"value": "[parameters('vnetAddressPrefix')]"},
        "gatewayHostSubnet" :{"value": "[parameters('gatewayHostSubnet')]"},
        "privateHostSubnet" :{"value": "[parameters('privateHostSubnet')]"},
        "publicHostSubnet" :{"value": "[parameters('publicHostSubnet')]"},
        "bastionHostSubnet" :{"value": "[parameters('bastionHostSubnet')]"},
        "Tags" :{"value": "[parameters('Tags')]"}
      }
      }
      },
      {
        "type": "Microsoft.Resources/resourceGroups",
        "apiVersion": "2020-06-01",
        "name": "[variables('BackupResourceGroupName')]",
        "location": "[parameters('resourceGroupLocation')]",
        "tags": "[parameters('Tags')]",
        "properties": {}
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "name": "AzureBackupTemplate",
        "resourceGroup": "[variables('BackupResourceGroupName')]",
          "dependsOn": [
            "[variables('BackupResourceGroupName')]"
          ],
        "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BackupTemplateUrl'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceprefix" :{"value": "[parameters('resourceprefix')]"},
          "Tags" :{"value": "[parameters('Tags')]"}
        }
        }
        },
        {
          "type": "Microsoft.Resources/resourceGroups",
          "apiVersion": "2020-06-01",
          "name": "[variables('AutomationResourceGroupName')]",
          "location": "[parameters('resourceGroupLocation')]",
          "tags": "[parameters('Tags')]",
          "properties": {}
        },
        {
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2019-10-01",
          "name": "AzureAutomationTemplate",
          "resourceGroup": "[variables('AutomationResourceGroupName')]",
            "dependsOn": [
              "[variables('AutomationResourceGroupName')]"
            ],
          "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(variables('AutomationTemplateUrl'), parameters('containerSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "resourceprefix" :{"value": "[parameters('resourceprefix')]"},
            "storageAccountID" :{"value": "[reference('AzureActivityLogTemplate').outputs.ActivityLogStorageIDOutput.Value]"},
            "Tags" :{"value": "[parameters('Tags')]"}
          }
          }
          },
          {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "location": "[parameters('resourceGroupLocation')]",
            "name": "AzureSecurityCenterTemplate",
              "dependsOn": [
                "AzureActivityLogTemplate"
              ],
            "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[concat(variables('SecurityCenterTemplateUrl'), parameters('containerSasToken'))]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "resourceprefix" :{"value": "[parameters('resourceprefix')]"},
              "workspaceid" :{"value": "[reference('AzureActivityLogTemplate').outputs.ActivityLogWorkspaceIDOutput.Value]"},
              "AscOwnerEmail" :{"value": "[parameters('AscOwnerEmail')]"},
              "AscOwnerContact" :{"value": "[parameters('AscOwnerContact')]"}
            }
            }
          },
          {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "MonitoringTemplate",
            "resourceGroup": "[variables('ActivityLogResourceGroupName')]",
              "dependsOn": [
                "AzureActivityLogTemplate"
              ],
            "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[concat(variables('MonitoringTemplateUrl'), parameters('containerSasToken'))]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "resourceprefix" :{"value": "[parameters('resourceprefix')]"},
              "ActionGroupEmailName" :{"value": "[parameters('ActionGroupEmailName')]"},
              "ActionGroupEmail" :{"value": "[parameters('ActionGroupEmail')]"},
              "ActionGroupSmsName" :{"value": "[parameters('ActionGroupSmsName')]"},
              "ActionGroupSmsCountryCode" :{"value": "[parameters('ActionGroupSmsCountryCode')]"},
              "ActionGroupSmsNumber" :{"value": "[parameters('ActionGroupSmsNumber')]"}
            }
            }
          },
          {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "location": "[parameters('resourceGroupLocation')]",
            "name": "AzurePoliciesTemplate",
            "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[concat(variables('PoliciesTemplateUrl'), parameters('containerSasToken'))]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
            }
            }
          }
    ]
  }
